{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\cc\\\\bookstore-frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport * as api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isEmployee, setIsEmployee] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const storedUser = sessionStorage.getItem('user');\n    console.log('Stored user in sessionStorage:', storedUser);\n    if (storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        console.log('Parsed user:', parsedUser);\n        if (parsedUser && parsedUser.role) {\n          parsedUser.role = parsedUser.role.toLowerCase();\n          setUser(parsedUser);\n          setIsAdmin(parsedUser.role === 'admin');\n          setIsEmployee(parsedUser.role === 'employee');\n          console.log('User set successfully:', parsedUser);\n        } else {\n          console.log('No role found in stored user, clearing sessionStorage');\n          sessionStorage.removeItem('user');\n        }\n      } catch (error) {\n        console.error('Error parsing stored user:', error);\n        sessionStorage.removeItem('user');\n      }\n    } else {\n      console.log('No user found in sessionStorage');\n    }\n    setIsLoading(false);\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await api.loginUser(credentials);\n      const userData = response.data;\n      console.log('User data from API:', userData);\n      if (!userData || !userData.role) {\n        throw new Error('User role not provided by API');\n      }\n      userData.role = userData.role.toLowerCase();\n      setUser(userData);\n      setIsAdmin(userData.role === 'admin');\n      setIsEmployee(userData.role === 'employee');\n      sessionStorage.setItem('user', JSON.stringify(userData));\n      console.log('User saved to sessionStorage:', userData);\n      // Xóa giỏ hàng cũ của guest (nếu có)\n      localStorage.removeItem('cart_guest');\n      return userData;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw new Error('Login failed');\n    }\n  };\n  const logout = () => {\n    const cartKey = user ? `cart_${user.id}` : 'cart_guest';\n    setUser(null);\n    setIsAdmin(false);\n    setIsEmployee(false);\n    sessionStorage.removeItem('user');\n    localStorage.removeItem(cartKey); // Xóa giỏ hàng của user hiện tại\n  };\n  if (isLoading) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAdmin,\n      isEmployee,\n      login,\n      logout,\n      isLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"4qS01q4aq79QyoamVPhktpGwnts=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAdmin","setIsAdmin","isEmployee","setIsEmployee","isLoading","setIsLoading","storedUser","sessionStorage","getItem","console","log","parsedUser","JSON","parse","role","toLowerCase","removeItem","error","login","credentials","response","loginUser","userData","data","Error","setItem","stringify","localStorage","logout","cartKey","id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/cc/bookstore-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport * as api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [isEmployee, setIsEmployee] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const storedUser = sessionStorage.getItem('user');\r\n    console.log('Stored user in sessionStorage:', storedUser);\r\n    if (storedUser) {\r\n      try {\r\n        const parsedUser = JSON.parse(storedUser);\r\n        console.log('Parsed user:', parsedUser);\r\n        if (parsedUser && parsedUser.role) {\r\n          parsedUser.role = parsedUser.role.toLowerCase();\r\n          setUser(parsedUser);\r\n          setIsAdmin(parsedUser.role === 'admin');\r\n          setIsEmployee(parsedUser.role === 'employee');\r\n          console.log('User set successfully:', parsedUser);\r\n        } else {\r\n          console.log('No role found in stored user, clearing sessionStorage');\r\n          sessionStorage.removeItem('user');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error parsing stored user:', error);\r\n        sessionStorage.removeItem('user');\r\n      }\r\n    } else {\r\n      console.log('No user found in sessionStorage');\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await api.loginUser(credentials);\r\n      const userData = response.data;\r\n      console.log('User data from API:', userData);\r\n      if (!userData || !userData.role) {\r\n        throw new Error('User role not provided by API');\r\n      }\r\n      userData.role = userData.role.toLowerCase();\r\n      setUser(userData);\r\n      setIsAdmin(userData.role === 'admin');\r\n      setIsEmployee(userData.role === 'employee');\r\n      sessionStorage.setItem('user', JSON.stringify(userData));\r\n      console.log('User saved to sessionStorage:', userData);\r\n      // Xóa giỏ hàng cũ của guest (nếu có)\r\n      localStorage.removeItem('cart_guest');\r\n      return userData;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw new Error('Login failed');\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    const cartKey = user ? `cart_${user.id}` : 'cart_guest';\r\n    setUser(null);\r\n    setIsAdmin(false);\r\n    setIsEmployee(false);\r\n    sessionStorage.removeItem('user');\r\n    localStorage.removeItem(cartKey); // Xóa giỏ hàng của user hiện tại\r\n  };\r\n\r\n  if (isLoading) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, isAdmin, isEmployee, login, logout, isLoading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}